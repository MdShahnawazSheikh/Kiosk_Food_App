import 'package:flutter/material.dart';
import 'package:kiosk_food/burger_page.dart';
import 'package:kiosk_food/carousel.dart';
import 'package:kiosk_food/drink_page.dart';
import 'package:kiosk_food/pizza_page.dart';
import 'package:kiosk_food/trending_page.dart';
import 'package:device_preview/device_preview.dart';

const bool kReleaseMode = bool.fromEnvironment('dart.vm.product');
void main() => runApp(
      DevicePreview(
        enabled: !kReleaseMode,
        builder: (context) => const MyApp(), // Wrap your app
      ),
    );

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Kiosk Food Ordering',
      theme: ThemeData(
        primarySwatch: Colors.green,
      ),
      home: const HomeScreen(),
    );
  }
}

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  int _selectedIndex = 0; // Index of the selected tab

  // Define the list of pages to be displayed when each tab is selected
  final List<Widget> _pages = [
    const PizzaPage(), // Pizza
    const BurgerPage(), // Burger
    const DrinkPage(), // Cold Drink
    const TrendingPage(), // Recommend
  ];

  // List to store added products
  List<AddedProduct> addedProducts = [
    AddedProduct("TestProduct 1", 334, 3, 'assets/pizza_img/pizza1.png'),
    AddedProduct("TestProduct 2", 564, 3, 'assets/pizza_img/pizza2.png'),
    AddedProduct("TestProduct 3", 644, 3, 'assets/pizza_img/pizza3.png'),
  ];

  @override
  Widget build(BuildContext context) {
    final List<String> imageList = [
      'assets/ads_img/ad1.jpg',
      'assets/ads_img/ad2.jpg',
      'assets/ads_img/ad3.jpg',
      'assets/ads_img/ad4.jpg',
      // Add your image paths here
    ];
    return MaterialApp(
      useInheritedMediaQuery: true,
      locale: DevicePreview.locale(context),
      builder: DevicePreview.appBuilder,
      theme: ThemeData.light(),
      darkTheme: ThemeData.dark(),
      home: Scaffold(
        body: Padding(
          padding: const EdgeInsets.only(top: 8.0),
          child: SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.all(8.0),
              child: Column(
                children: [
                  const SizedBox(
                    height: 15,
                  ),
                  Padding(
                    padding: const EdgeInsets.only(top: 5, bottom: 20),
                    child: ImageCarousel(imageList: imageList),
                  ),
                  _pages[_selectedIndex],
                ],
              ),
            ),
          ),
        ), // Display the selected page
        bottomNavigationBar: BottomNavigationBar(
          currentIndex: _selectedIndex, // Current selected index
          onTap: _onItemTapped, // Function to handle item tap
          items: [
            // Define the navigation bar items with icons
            BottomNavigationBarItem(
              icon: Image.asset('assets/nav_icons/pizza1.png',
                  width: 30, height: 30),
              label: 'Pizza',
            ),
            BottomNavigationBarItem(
              icon: Image.asset('assets/nav_icons/burger.png',
                  width: 30, height: 30),
              label: 'Burger',
            ),
            BottomNavigationBarItem(
              icon: Image.asset('assets/nav_icons/cold_drink.png',
                  width: 30, height: 30),
              label: 'Cold Drink',
            ),
            BottomNavigationBarItem(
              icon: Image.asset('assets/nav_icons/trending.png',
                  width: 30, height: 30),
              label: 'Recommend',
            ),
          ],
        ),
        floatingActionButton: FloatingActionButton(
          onPressed: () {
            _showCartDialog(context);
          },
          child: const Icon(Icons.shopping_cart),
        ),
      ),
    );
  }

  // Function to handle item tap and change the selected page
  void _onItemTapped(int index) {
    setState(() {
      _selectedIndex = index;
    });
  }

  // Function to show the cart dialog
  void _showCartDialog(BuildContext context) {
    showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: const Text('Your Cart'),
          content: SizedBox(
            width: double.maxFinite,
            child: ListView.builder(
              itemCount: addedProducts.length,
              itemBuilder: (context, index) {
                return ListTile(
                  leading:
                      Image(image: AssetImage(addedProducts[index].imagePath)),
                  title: Text(addedProducts[index].productName),
                  subtitle: Text(
                    'Price: \$${addedProducts[index].price.toStringAsFixed(2)}\nQuantity: ${addedProducts[index].quantity}',
                  ),
                  trailing: IconButton(
                    icon: const Icon(Icons.remove_shopping_cart),
                    onPressed: () {
                      _removeProduct(index);
                    },
                  ),
                );
              },
            ),
          ),
          actions: <Widget>[
            ElevatedButton(
              onPressed: () {
                Navigator.of(context).pop();
              },
              child: const Text('Close'),
            ),
          ],
        );
      },
    );
  }

  // Function to add a product to the cart
  void _addProduct(AddedProduct product) {
    setState(() {
      addedProducts.add(product);
    });
  }

  // Function to remove a product from the cart
  void _removeProduct(int index) {
    setState(() {
      addedProducts.removeAt(index);
    });
  }
}

class AddedProduct {
  final String imagePath;
  final String productName;
  final double price;
  int quantity;

  AddedProduct(this.productName, this.price, this.quantity, this.imagePath);
}
addButton.dart: import 'package:flutter/material.dart';
import 'main.dart';

class AddRemoveButton extends StatefulWidget {
  final String imagePath;
  final String productName;
  final double price;
  final String productSize;

  @override
  const AddRemoveButton(
      {super.key,
      required this.imagePath,
      required this.productName,
      required this.price,
      required this.productSize});
  _AddRemoveButtonState createState() => _AddRemoveButtonState();
}

class _AddRemoveButtonState extends State<AddRemoveButton> {
  int count = 1;
  bool isAdded = false;

  void _toggleButton() {
    setState(() {
      isAdded = !isAdded;
      // Remove the condition to allow count to reach zero
    });
  }

  void _decrementCount() {
    if (count > 0) {
      setState(() {
        count--;
        if (count == 0) {
          _toggleButton();
        }
      });
    }
  }

  void _incrementCount() {
    setState(() {
      count++;
    });
  }

  @override
  Widget build(BuildContext context) {
    double screenwidth = MediaQuery.of(context).size.width;
    return Container(
      decoration: BoxDecoration(shape: BoxShape.rectangle),
      child: Column(
        // mainAxisAlignment: MainAxisAlignment.start,
        children: [
          isAdded
              ? Row(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: [
                    IconButton(
                      icon: const Icon(Icons.remove),
                      onPressed: _decrementCount,
                    ),
                    Text(
                      '$count',
                      style: TextStyle(fontSize: screenwidth / 28),
                    ),
                    IconButton(
                      icon: const Icon(Icons.add),
                      onPressed: _incrementCount,
                    ),
                  ],
                )
              : ElevatedButton(
                  onPressed: _toggleButton,
                  style: ElevatedButton.styleFrom(
                    primary: Colors.green,
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(10.0),
                    ),
                  ),
                  child: Padding(
                    padding: const EdgeInsets.symmetric(
                        horizontal: 12.0, vertical: 4),
                    child: Text(
                      'ADD',
                      textAlign: TextAlign.end,
                      style: TextStyle(fontSize: screenwidth / 28),
                    ),
                  ),
                ),
        ],
      ),
    );
  }
}
main calls PizzaPage() and PizzaPage calls ProductCard and ProductCard calls AddRemoveButton